#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build N2N

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/ntop/n2n
  REPO_BRANCH: dev
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

 
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH n2n
        ln -sf /workdir/n2n $GITHUB_WORKSPACE/n2n

    - name: Compile the firmware
      id: compile
      run: |
        cd n2n
        echo -e "$(nproc) thread compile"
        ./autogen.sh
        ./configure
        make
        echo "::set-output name=status::success"

    - name: Check space usage
      if: (!cancelled())
      run: |
        df -hT
        ls n2n

    - name: Upload
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          n2n/supernode
          n2n/edge
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Start SSH Server
      env:
        NPC_TOKEN: ${{ secrets.NPC_TOKEN }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        chmod +x ./sshd.sh &&  ./sshd.sh

    - name: Sleep
      if: ${{ failure() }}
      run: sleep 1h
